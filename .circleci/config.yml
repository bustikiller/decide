version: 2
jobs:
  test:
    working_directory: ~/decide
    parallelism: 1
    shell: /bin/bash --login
    docker:
      - image: circleci/ruby:2.6.3-node-browsers
        environment:
          RAILS_ENV: test
          RACK_ENV: test
          PGHOST: 127.0.0.1
          PGUSER: postgres
      - image: circleci/postgres:9.6-ram
        environment:
          POSTGRES_USER: postgres
          POSTGRES_DB: decide_test
          POSTGRES_PASSWORD: postgres
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dep-{{ checksum "Gemfile.lock" }}
            - v1-dep-bundle-
      - run: bundle check --path=vendor/bundle || bundle install --path=vendor/bundle --jobs=4 --retry=3
      - save_cache:
          key: v1-dep-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle
      - run:
          command: bundle exec rspec --color --format documentation --require spec_helper --require rails_helper spec
          environment:
            RAILS_GROUPS: assets
      - store_artifacts:
          path: coverage
          prefix: tests
  cypress:
    working_directory: ~/decide
    parallelism: 1
    shell: /bin/bash --login
    docker:
      - image: circleci/ruby:2.6.3-node-browsers
        environment:
          RAILS_ENV: development
          RACK_ENV: development
          PGHOST: 127.0.0.1
          PGUSER: postgres
      - image: circleci/postgres:9.6-ram
        environment:
          POSTGRES_USER: postgres
          POSTGRES_DB: decide_development
          POSTGRES_PASSWORD: postgres
    steps:
      - checkout
      - run: npm install
      - restore_cache:
          keys:
            - v1-dep-{{ checksum "Gemfile.lock" }}
            - v1-dep-bundle-
      - run: bundle check --path=vendor/bundle || bundle install --path=vendor/bundle --jobs=4 --retry=3
      - save_cache:
          key: v1-dep-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle
      - run: bundle exec rake db:reset
      - run:
          name: Rails server
          command: bundle exec rails s
          background: true
      - run: sleep 5 ; npm run cy:run:recorded
  build:
    docker:
      - image: circleci/ruby:2.6.3-node-browsers
    steps:
      - checkout
      - run:
          name: Setup VirtualEnv
          command: |
            echo 'export TAG=${CIRCLE_BRANCH}' >> $BASH_ENV
            echo 'export IMAGE_NAME=decide' >> $BASH_ENV 
            echo 'export ORG_NAME=exploradoresdemadrid' >> $BASH_ENV 
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Build & push to DockerHub 
          command: |
            docker build -f Dockerfile-prod -t $ORG_NAME/$IMAGE_NAME:$TAG .
            echo $DOCKER_PWD | docker login -u $DOCKER_LOGIN --password-stdin
            docker push $ORG_NAME/$IMAGE_NAME:$TAG
  deploy:
    docker:
      - image: ictu/sshpass
    steps:
      - run:
          name: Deploy to server 
          command: |
            sshpass -p $SERVER_PASSWORD ssh -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_ADDRESS "cd /home/ubuntu/deployments/scripts && ./deploy-prod.sh"
workflows:
  version: 2
  build:
    jobs:
      - test
      - cypress
      - build:
          filters:
            branches:
              only:
                - master
      - deploy:
          requires:
            - build
            - test
            - cypress
          filters:
            branches:
              only:
                - master
